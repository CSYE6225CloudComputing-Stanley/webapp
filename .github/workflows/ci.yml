name: Webapp test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  webapp-ci:
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

#    services:
#      mysql:
#        image: mysql:8.0
#        env:
#          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
#          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Print Environment Variables
        run: |
          echo "Environment Variables:"
          echo "DB_HOST=$DB_HOST"
          echo "DB_PORT=$DB_PORT"
          echo "DB_NAME=$DB_NAME"
          echo "DB_USERNAME=DB_USERNAME"
          echo "DB_PASSWORD=$DB_PASSWORD"

      - name: Set Up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..30}; do
            if mysqladmin ping -h $DB_HOST --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "MySQL is unavailable - sleeping"
            sleep 2
          done

      - name: Print Environment Variables
        run: |
          echo "Environment Variables:"
          echo "DB_HOST=$DB_HOST"
          echo "DB_PORT=$DB_PORT"
          echo "DB_NAME=$DB_NAME"
          echo "DB_USERNAME=DB_USERNAME"
          echo "DB_PASSWORD=$DB_PASSWORD"

      - name: Start Spring Boot Application
        run: |
          echo "Starting Spring Boot application..."
          mvn spring-boot:run &
          sleep 10

      - name: Run Tests
        run: mvn clean test

      - name: Stop Spring Boot Application
        run: |
          echo "Stopping Spring Boot application..."
          pkill -f 'java.*spring-boot' || true